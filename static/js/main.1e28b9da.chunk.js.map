{"version":3,"sources":["assets/sprites/honey_badger_spritesheet.png","assets/sprites/lightbulb_spritesheet.png","assets/sprites/glider_spritesheet.png","assets/sprites/glidermaker_spritesheet.png","assets/sprites/mothership_spritesheet.png","Game.js","App.js","reportWebVitals.js","index.js"],"names":["console","log","honeyBadgerSprite","lightbulbSprite","gliderSprite","glidermakerSprite","mothershipSprite","Game","lightbulbs","setLightbulbs","useState","gliders","setGliders","hackerspaces","setHackerspaces","location","setLocation","useEffect","savedGame","Cookies","get","parsedGame","JSON","parse","set","stringify","interval","setInterval","prevLightbulbs","clearInterval","_jsxs","Box","textAlign","p","children","Text","fontSize","_jsx","motion","img","src","alt","animate","rotate","transition","duration","loop","Infinity","ease","onClick","generateLightbulb","cursor","scale","convertToGlider","isDisabled","x","y","createHackerspace","opacity","upgradeLocation","App","ChakraProvider","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e28b9da.chunk.js","sourcesContent":["export default \"data:image/png;base64,\"","export default \"data:image/png;base64,\"","export default \"data:image/png;base64,\"","export default \"data:image/png;base64,\"","export default \"data:image/png;base64,\"","import React, { useState, useEffect } from 'react';\nimport { Box, Text } from \"@chakra-ui/react\";\nimport Cookies from 'js-cookie';\nimport { motion } from 'framer-motion';\nimport honeyBadgerSprite from './assets/sprites/honey_badger_spritesheet.png';\nimport lightbulbSprite from './assets/sprites/lightbulb_spritesheet.png';\nimport gliderSprite from './assets/sprites/glider_spritesheet.png';\nimport glidermakerSprite from './assets/sprites/glidermaker_spritesheet.png';\nimport mothershipSprite from './assets/sprites/mothership_spritesheet.png';\n\nconsole.log('Honey Badger Sprite:', honeyBadgerSprite);\nconsole.log('Lightbulb Sprite:', lightbulbSprite);\nconsole.log('Glider Sprite:', gliderSprite);\nconsole.log('Glidermaker Sprite:', glidermakerSprite);\nconsole.log('Mothership Sprite:', mothershipSprite);\n\nconst Game = () => {\n  const [lightbulbs, setLightbulbs] = useState(0);\n  const [gliders, setGliders] = useState(0);\n  const [hackerspaces, setHackerspaces] = useState(0);\n  const [location, setLocation] = useState('basement');\n\n  useEffect(() => {\n    const savedGame = Cookies.get('hack_badger_game');\n    if (savedGame) {\n      const parsedGame = JSON.parse(savedGame);\n      setLightbulbs(parsedGame.lightbulbs || 0);\n      setGliders(parsedGame.gliders || 0);\n      setHackerspaces(parsedGame.hackerspaces || 0);\n      setLocation(parsedGame.location || 'basement');\n    }\n  }, []);\n\n  useEffect(() => {\n    Cookies.set('hack_badger_game', JSON.stringify({ lightbulbs, gliders, hackerspaces, location }));\n  }, [lightbulbs, gliders, hackerspaces, location]);\n\n  // Function to generate lightbulbs\n  const generateLightbulb = () => setLightbulbs(lightbulbs + 1);\n\n  // Function to convert lightbulbs to gliders\n  const convertToGlider = () => {\n    if (lightbulbs >= 10) {\n      setLightbulbs(lightbulbs - 10);\n      setGliders(gliders + 1);\n    }\n  };\n\n  // Function to create hackerspaces\n  const createHackerspace = () => {\n    if (gliders >= 5) {\n      setGliders(gliders - 5);\n      setHackerspaces(hackerspaces + 1);\n    }\n  };\n\n  // Function to upgrade location\n  const upgradeLocation = () => {\n    if (hackerspaces >= 3) {\n      setHackerspaces(hackerspaces - 3);\n      if (location === 'basement') setLocation('garage');\n      else if (location === 'garage') setLocation('home lab');\n      else if (location === 'home lab') setLocation('hackerspace');\n      else if (location === 'hackerspace') setLocation('mothership');\n    }\n  };\n\n  // Simulate lightbulb generation by gliders\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setLightbulbs(prevLightbulbs => prevLightbulbs + gliders);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [gliders]);\n\n  return (\n    <Box textAlign=\"center\" p={5}>\n      <Text fontSize=\"2xl\">Current Location: {location}</Text>\n      <motion.img\n        src={honeyBadgerSprite}\n        alt=\"Honey Badger\"\n        animate={{ rotate: 360 }}\n        transition={{ duration: 2, loop: Infinity, ease: \"linear\" }}\n      />\n      <Box onClick={generateLightbulb} cursor=\"pointer\">\n        <Text>Click the laptop to generate ideas</Text>\n        <motion.img\n          src={lightbulbSprite}\n          alt=\"Lightbulb\"\n          animate={{ scale: [1, 1.5, 1] }}\n          transition={{ duration: 0.5, loop: Infinity, ease: \"easeInOut\" }}\n        />\n        <Text>Ideas: {lightbulbs}</Text>\n      </Box>\n      <Box onClick={convertToGlider} cursor=\"pointer\" isDisabled={lightbulbs < 10}>\n        <Text>Click the glider to convert ideas to hackers</Text>\n        <motion.img\n          src={gliderSprite}\n          alt=\"Glider\"\n          animate={{ x: [0, 100, 0], y: [0, -100, 0] }}\n          transition={{ duration: 1, loop: Infinity, ease: \"easeInOut\" }}\n        />\n        <Text>Hackers: {gliders}</Text>\n      </Box>\n      <Box onClick={createHackerspace} cursor=\"pointer\" isDisabled={gliders < 5}>\n        <Text>Click the glidermaker to create a hackerspace</Text>\n        <motion.img\n          src={glidermakerSprite}\n          alt=\"Glidermaker\"\n          animate={{ opacity: [0, 1, 0] }}\n          transition={{ duration: 1, loop: Infinity, ease: \"easeInOut\" }}\n        />\n        <Text>Hackerspaces: {hackerspaces}</Text>\n      </Box>\n      <Box onClick={upgradeLocation} cursor=\"pointer\" isDisabled={hackerspaces < 3}>\n        <Text>Click the mothership to evolve location</Text>\n        <motion.img\n          src={mothershipSprite}\n          alt=\"Mothership\"\n          animate={{ y: [0, -50, 0] }}\n          transition={{ duration: 1, loop: Infinity, ease: \"easeInOut\" }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Game;\n","import React from 'react';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Game />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}